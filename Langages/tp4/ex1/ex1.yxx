// ------ Prologue C++ ------
%{
	#define YYSTYPE int
	#include <iostream>
	int yylex(void);
	void yyerror(char const *);
	int n = 0;
	
%}

// ------ Grammaire ------
%%
input:	//
		| input ligne
;

ligne:	'\n'
		| exp '\n' { std::cout << " --> n = " << n << std::endl; n = 0; }
;

exp:	'a' exp 'b'		{ n++; }
		| 'a' 'b'			{ n++; }
		
// ------ Epilogue C++ ------
%%

//Appelé par l'analyseur en cas d'erreur
void yyerror(char const *s) {
	std::cout << "erreur lors de l'analyse " << s << std::endl;
}

//Fait une analyse syntaxique caractère par caractère
int yylex(void) {
	char c;
	std::cin >> c;
	while( c == ' ' || c == '\t' ) {
		std::cin >> c;
	}
	return c;
}

//Programme principal
int main(void) {
	std::cin.unsetf(std::ios_base::skipws);
	return yyparse();
}
